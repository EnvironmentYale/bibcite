<?php
/**
 * @file
 * Module hooks.
 */

use Drupal\Core\Render\Element;

/**
 * Implements hook_theme().
 */
function bibcite_entity_theme($existing, $type, $theme, $path) {
  return [
    'bibcite_reference_table' => [
      'render element' => 'elements',
    ],
    'bibcite_contributor' => [
      'render element' => 'elements',
    ],
    'bibcite_keyword' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bibcite_entity_preprocess_bibcite_reference_table(&$variables) {
  $variables['content'] = [
    '#type' => 'container',
    'table' => [
      '#type' => 'table',
    ],
    'links' => [
      '#theme' => 'item_list',
      '#attributes' => [
        'class' => ['inline'],
      ],
      '#items' => [],
    ],
  ];

  foreach (Element::children($variables['elements']) as $key) {
    if (Element::children($variables['elements'][$key])) {
      $title = $variables['elements'][$key]['#title'];
      $variables['elements'][$key]['#title'] = '';
      $variables['content']['table'][] = [
        'title' => [
          '#markup' => $title,
        ],
        'element' => $variables['elements'][$key],
      ];
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bibcite_entity_preprocess_bibcite_contributor(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bibcite_entity_preprocess_bibcite_keyword(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Implements hook_modules_installed().
 *
 * Clear bundles cache after module is installed.
 * For some reason bundles does not cached after module installation.
 *
 * @todo Find what is caused this issue
 */
function bibcite_entity_modules_installed($modules) {
  if (in_array('bibcite_entity', $modules)) {
    \Drupal::service('entity_type.bundle.info')->clearCachedBundles();
  }
}
